
package cz.muni.fi.pv168.gui;

import cz.muni.fi.pv168.common.DBUtils;
import cz.muni.fi.pv168.prison.backend.Cell;
import cz.muni.fi.pv168.prison.backend.CellManager;
import cz.muni.fi.pv168.prison.backend.CellManagerImpl;
import cz.muni.fi.pv168.prison.backend.Prisoner;
import cz.muni.fi.pv168.prison.backend.PrisonerManager;
import cz.muni.fi.pv168.prison.backend.PrisonerManagerImpl;
import cz.muni.fi.pv168.prison.backend.SentenceManager;
import cz.muni.fi.pv168.prison.backend.SentenceManagerImpl;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import javax.sql.DataSource;
import org.apache.commons.dbcp2.BasicDataSource;
import java.util.logging.Logger;
import cz.muni.fi.pv168.prison.backend.Sentence;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.Month;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.concurrent.ExecutionException;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
//import javafx.scene.control.Cell;
/**
 *
 * @author Zita
 */
public class PrisonFrame extends javax.swing.JFrame {

    /**
     * Creates new form PrisonFrame
     */
    public PrisonFrame() {
        initComponents();

        PrisonersTableModel model_prisoners = (PrisonersTableModel) jTablePrisoners.getModel();
        CellsTableModel model_cells = (CellsTableModel) jTableCells.getModel();
        SentencesTableModel model_sentences = (SentencesTableModel) jTableSentences.getModel();
        addAllCells(model_cells);
        addAllSentences(model_sentences);
        addAllPrisoners(model_prisoners);
        
    }
    
    private static ResourceBundle resourceBundle = ResourceBundle.getBundle("cz/muni/fi/pv168/prison/gui/strings", Locale.getDefault());
    private static final Logger logger = Logger.getLogger(
            PrisonFrame.class.getName());
    private DataSource dataSource = getDatasource();
    private SentenceManager sM = new SentenceManagerImpl(this.dataSource);
    private CellManager cM = new CellManagerImpl(this.dataSource);
    private PrisonerManager pM = new PrisonerManagerImpl(this.dataSource);
    
    private void addAllSentences(SentencesTableModel model_sentences) {
        List<Sentence> ls = sM.findAllSentences();
        
        for (Sentence s : ls) {
            model_sentences.addSentence(s);
        }
    }
    
    private void addAllCells(CellsTableModel model_cells) {
        List<Cell> ls = cM.findAllCells();
        
        for (Cell c : ls) {
            model_cells.addCell(c);
        }
    }
    
    private void addAllPrisoners(PrisonersTableModel model_prisoners) {
        /*Prisoner prisoner = new Prisoner("Oldrich", "Konecny", LocalDate.of(1994, 8, 1));
        pM.createPrisoner(prisoner);*/
        List<Prisoner> ls = pM.findAllPrisoners();
        
        for (Prisoner p : ls) {
            model_prisoners.addPrisoner(p);
        }
    }
    
    private DataSource getDatasource() {
        /*
        Properties myConf = new Properties();
        
        try {
            myConf.load(Main.class.getResourceAsStream("src/main/resources/cz/muni/fi/pv168/prison/gui/configuration.properties"));
        } catch (IOException ex) {
            logger.log(Level.SEVERE, "cannot reach configuration.properties file", ex);
        }
        */
        BasicDataSource ds = new BasicDataSource();
        ds.setUrl("jdbc:derby:memory:books;create=true");//myConf.getProperty("jdbc.url"));
        ds.setUsername("makeup");//myConf.getProperty("jdbc.user"));
        ds.setPassword("heslo");//myConf.getProperty("jdbc.password"));
        
        try {
            DBUtils.executeSqlScript(ds,SentenceManager.class.getResource("createTables.sql"));
        } catch (SQLException ex) {
            logger.log(Level.SEVERE, "cannot reach createTables.sql", ex);
        }
        return ds;
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPanePrison = new javax.swing.JTabbedPane();
        jPanelPrisoners = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePrisoners = new javax.swing.JTable();
        jButtonCreatePrisoner = new javax.swing.JButton();
        jLabelPrisoners = new javax.swing.JLabel();
        jTextFieldPrisonerCreateName = new javax.swing.JTextField();
        jTextFieldPrisonerCreateSurname = new javax.swing.JTextField();
        jButtonDeletePrisoner = new javax.swing.JButton();
        jTextFieldPrisonerUpdateName = new javax.swing.JTextField();
        jTextFieldPrisonerUpdateSurname = new javax.swing.JTextField();
        jButtonUpdatePrisoner = new javax.swing.JButton();
        jButtonCreateSentence = new javax.swing.JButton();
        jLabelCells = new javax.swing.JLabel();
        jComboBoxCreateCellFloor = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableCells = new javax.swing.JTable();
        jSpinnerCreateCellCapacity = new javax.swing.JSpinner();
        jButtonCreateCell = new javax.swing.JButton();
        jButtonDeleteCell = new javax.swing.JButton();
        jButtonUpdateCell = new javax.swing.JButton();
        jLabelSentence = new javax.swing.JLabel();
        jLabelCellCreateCapacity = new javax.swing.JLabel();
        jLabelPrisonerCreateDay = new javax.swing.JLabel();
        jSpinnerPrisonerCreateDay = new javax.swing.JSpinner();
        jLabelPrisonerCreateMonth = new javax.swing.JLabel();
        jSpinnerPrisonerCreateMonth = new javax.swing.JSpinner();
        jLabelPrisonerCreateYear = new javax.swing.JLabel();
        jSpinnerPrisonerCreateYear = new javax.swing.JSpinner();
        jLabelPrisonerUpdateDay = new javax.swing.JLabel();
        jSpinnerPrisonerUpdateDay = new javax.swing.JSpinner();
        jLabelPrisonerUpdateMonth = new javax.swing.JLabel();
        jSpinnerPrisonerUpdateMonth = new javax.swing.JSpinner();
        jLabelPrisonerUpdateYear = new javax.swing.JLabel();
        jSpinnerPrisonerUpdateYear = new javax.swing.JSpinner();
        jLabelSentenceCreateStart = new javax.swing.JLabel();
        jLabelSentenceCreateEnd = new javax.swing.JLabel();
        jLabelSentenceCreateStartDay = new javax.swing.JLabel();
        jSpinnerSentenceStardDay = new javax.swing.JSpinner();
        jLabelSentenceCreateStartMonth = new javax.swing.JLabel();
        jSpinnerSentenceStardMonth = new javax.swing.JSpinner();
        jLabelSentenceCreateStartYear = new javax.swing.JLabel();
        jSpinnerSentenceStardYear = new javax.swing.JSpinner();
        jLabelSentenceCreateEndDay = new javax.swing.JLabel();
        jSpinnerSentenceEndDay = new javax.swing.JSpinner();
        jLabelSentenceCreateEndMonth = new javax.swing.JLabel();
        jSpinnerSentenceEndMonth = new javax.swing.JSpinner();
        jLabelSentenceCreateEndYear = new javax.swing.JLabel();
        jSpinnerSentenceEndYear = new javax.swing.JSpinner();
        jButtonRefreshAll = new javax.swing.JButton();
        jLabelCellUpdateCapacity = new javax.swing.JLabel();
        jSpinnerUpdateCellCapacity = new javax.swing.JSpinner();
        jComboBoxUpdateCellFloor = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jTextFieldSentenceCreatePunishment = new javax.swing.JTextField();
        jLabelCellCreateFloor = new javax.swing.JLabel();
        jLabelCellUpdateFloor = new javax.swing.JLabel();
        jLabelPrisonerCreateBorn = new javax.swing.JLabel();
        jLabelPrisonerUpdateBorn = new javax.swing.JLabel();
        jPanelSentences = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableSentences = new javax.swing.JTable();
        jLabelSentences = new javax.swing.JLabel();
        jButtonSentenceDelete = new javax.swing.JButton();
        jButtonSentenceUpdate = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jSpinnerUpdateSentenceStartDay = new javax.swing.JSpinner();
        jLabel19 = new javax.swing.JLabel();
        jSpinnerUpdateSentenceStartMonth = new javax.swing.JSpinner();
        jLabel20 = new javax.swing.JLabel();
        jSpinnerUpdateSentenceStartYear = new javax.swing.JSpinner();
        jLabel21 = new javax.swing.JLabel();
        jSpinnerUpdateSentenceEndDay = new javax.swing.JSpinner();
        jLabel22 = new javax.swing.JLabel();
        jSpinnerUpdateSentenceEndMonth = new javax.swing.JSpinner();
        jLabel23 = new javax.swing.JLabel();
        jSpinnerUpdateSentenceEndYear = new javax.swing.JSpinner();
        jTextFieldSentenceUpdate = new javax.swing.JTextField();

        jTablePrisoners.setModel(new PrisonersTableModel());
        jScrollPane2.setViewportView(jTablePrisoners);

        jButtonCreatePrisoner.setText(resourceBundle.getString("button_prisoner_create"));
        jButtonCreatePrisoner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreatePrisonerActionPerformed(evt);
            }
        });

        jLabelPrisoners.setText(resourceBundle.getString("label_prisoners"));

        jTextFieldPrisonerCreateName.setText(resourceBundle.getString("text_prisoner_create_name"));

        jTextFieldPrisonerCreateSurname.setText(resourceBundle.getString("text_prisoner_create_surname"));

        jButtonDeletePrisoner.setText(resourceBundle.getString("button_prisoner_delete"));
        jButtonDeletePrisoner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletePrisonerActionPerformed(evt);
            }
        });

        jTextFieldPrisonerUpdateName.setText(resourceBundle.getString("text_prisoner_update_name"));

        jTextFieldPrisonerUpdateSurname.setText(resourceBundle.getString("text_prisoner_update_surname"));

        jButtonUpdatePrisoner.setText(resourceBundle.getString("button_prisoner_update"));
        jButtonUpdatePrisoner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdatePrisonerActionPerformed(evt);
            }
        });

        jButtonCreateSentence.setText(resourceBundle.getString("button_sentence_create"));
        jButtonCreateSentence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateSentenceActionPerformed(evt);
            }
        });

        jLabelCells.setText(resourceBundle.getString("label_cells"));

        jComboBoxCreateCellFloor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        jComboBoxCreateCellFloor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCreateCellFloorActionPerformed(evt);
            }
        });

        jTableCells.setModel(new CellsTableModel());
        jScrollPane4.setViewportView(jTableCells);

        jSpinnerCreateCellCapacity.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jButtonCreateCell.setText(resourceBundle.getString("button_cell_create"));
        jButtonCreateCell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateCellActionPerformed(evt);
            }
        });

        jButtonDeleteCell.setText(resourceBundle.getString("button_cell_delete"));
        jButtonDeleteCell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteCellActionPerformed(evt);
            }
        });

        jButtonUpdateCell.setText(resourceBundle.getString("button_cell_update"));
        jButtonUpdateCell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateCellActionPerformed(evt);
            }
        });

        jLabelSentence.setText(resourceBundle.getString("label_sentences"));

        jLabelCellCreateCapacity.setText(resourceBundle.getString("label_capacity"));

        jLabelPrisonerCreateDay.setText(resourceBundle.getString("label_day"));

        jSpinnerPrisonerCreateDay.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        jLabelPrisonerCreateMonth.setText(resourceBundle.getString("label_month"));

        jSpinnerPrisonerCreateMonth.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jLabelPrisonerCreateYear.setText(resourceBundle.getString("label_year"));

        jSpinnerPrisonerCreateYear.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3000, 1));

        jLabelPrisonerUpdateDay.setText(resourceBundle.getString("label_day"));

        jSpinnerPrisonerUpdateDay.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        jLabelPrisonerUpdateMonth.setText(resourceBundle.getString("label_month"));

        jSpinnerPrisonerUpdateMonth.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jLabelPrisonerUpdateYear.setText(resourceBundle.getString("label_year"));

        jSpinnerPrisonerUpdateYear.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3000, 1));

        jLabelSentenceCreateStart.setText(resourceBundle.getString("label_start"));

        jLabelSentenceCreateEnd.setText(resourceBundle.getString("label_end"));

        jLabelSentenceCreateStartDay.setText(resourceBundle.getString("label_day"));

        jSpinnerSentenceStardDay.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        jLabelSentenceCreateStartMonth.setText(resourceBundle.getString("label_month"));

        jSpinnerSentenceStardMonth.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jLabelSentenceCreateStartYear.setText(resourceBundle.getString("label_year"));

        jSpinnerSentenceStardYear.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3000, 1));

        jLabelSentenceCreateEndDay.setText(resourceBundle.getString("label_day"));

        jSpinnerSentenceEndDay.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        jLabelSentenceCreateEndMonth.setText(resourceBundle.getString("label_month"));

        jSpinnerSentenceEndMonth.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jLabelSentenceCreateEndYear.setText(resourceBundle.getString("label_year"));

        jSpinnerSentenceEndYear.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3000, 1));

        jButtonRefreshAll.setText(resourceBundle.getString("button_refresh"));
        jButtonRefreshAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshAllActionPerformed(evt);
            }
        });

        jLabelCellUpdateCapacity.setText(resourceBundle.getString("label_capacity"));

        jSpinnerUpdateCellCapacity.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jComboBoxUpdateCellFloor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        jComboBoxUpdateCellFloor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxUpdateCellFloorActionPerformed(evt);
            }
        });

        jTextFieldSentenceCreatePunishment.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextFieldSentenceCreatePunishment.setText(resourceBundle.getString("text_sentence_punishment"));
        jTextFieldSentenceCreatePunishment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSentenceCreatePunishmentActionPerformed(evt);
            }
        });

        jLabelCellCreateFloor.setText(resourceBundle.getString("floor"));

        jLabelCellUpdateFloor.setText(resourceBundle.getString("floor"));

        jLabelPrisonerCreateBorn.setText(resourceBundle.getString("label_born"));

        jLabelPrisonerUpdateBorn.setText(resourceBundle.getString("label_born"));

        javax.swing.GroupLayout jPanelPrisonersLayout = new javax.swing.GroupLayout(jPanelPrisoners);
        jPanelPrisoners.setLayout(jPanelPrisonersLayout);
        jPanelPrisonersLayout.setHorizontalGroup(
            jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrisonersLayout.createSequentialGroup()
                .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrisonersLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabelCellUpdateFloor, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jComboBoxUpdateCellFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCellUpdateCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerUpdateCellCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonRefreshAll))
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addComponent(jLabelCellCreateFloor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCreateCellFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelCellCreateCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerCreateCellCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonCreateCell, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(jButtonDeleteCell, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonUpdateCell, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrisonersLayout.createSequentialGroup()
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabelSentenceCreateEnd))
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelSentenceCreateStart)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addComponent(jLabelSentenceCreateEndDay, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerSentenceEndDay, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addComponent(jLabelSentenceCreateStartDay, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerSentenceStardDay, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addComponent(jLabelSentenceCreateEndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerSentenceEndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addComponent(jLabelSentenceCreateStartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerSentenceStardMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelSentenceCreateStartYear, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelSentenceCreateEndYear, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSpinnerSentenceEndYear, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerSentenceStardYear, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldSentenceCreatePunishment, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCreateSentence, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrisonersLayout.createSequentialGroup()
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                        .addComponent(jTextFieldPrisonerUpdateName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldPrisonerUpdateSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)
                                        .addComponent(jLabelPrisonerUpdateBorn)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelPrisonerUpdateDay, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinnerPrisonerUpdateDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabelPrisonerUpdateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinnerPrisonerUpdateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelPrisonerUpdateYear, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinnerPrisonerUpdateYear, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                        .addComponent(jTextFieldPrisonerCreateName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldPrisonerCreateSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabelPrisonerCreateBorn)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelPrisonerCreateDay, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinnerPrisonerCreateDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabelPrisonerCreateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinnerPrisonerCreateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelPrisonerCreateYear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinnerPrisonerCreateYear, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelCells, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelPrisoners, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(37, 37, 37)
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonCreatePrisoner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrisonersLayout.createSequentialGroup()
                                .addComponent(jButtonDeletePrisoner, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jButtonUpdatePrisoner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(25, 25, 25))
            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelSentence, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelPrisonersLayout.setVerticalGroup(
            jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelPrisoners, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPrisonerCreateSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrisonerCreateName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCreatePrisoner)
                    .addComponent(jLabelPrisonerCreateDay)
                    .addComponent(jSpinnerPrisonerCreateDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPrisonerCreateMonth)
                    .addComponent(jSpinnerPrisonerCreateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPrisonerCreateYear)
                    .addComponent(jSpinnerPrisonerCreateYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPrisonerCreateBorn))
                .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                        .addComponent(jButtonDeletePrisoner)
                        .addGap(48, 48, 48))
                    .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPrisonerUpdateName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPrisonerUpdateSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonUpdatePrisoner))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelSentence, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelSentenceCreateStart)
                                    .addComponent(jLabelSentenceCreateStartDay, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinnerSentenceStardDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelSentenceCreateStartMonth)
                                    .addComponent(jSpinnerSentenceStardMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelSentenceCreateStartYear)
                                    .addComponent(jSpinnerSentenceStardYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelSentenceCreateEndDay)
                                    .addComponent(jSpinnerSentenceEndDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelSentenceCreateEndMonth)
                                    .addComponent(jSpinnerSentenceEndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelSentenceCreateEndYear)
                                    .addComponent(jSpinnerSentenceEndYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelSentenceCreateEnd)))
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButtonCreateSentence)
                                    .addComponent(jTextFieldSentenceCreatePunishment, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelCells, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinnerCreateCellCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCreateCell)
                            .addComponent(jLabelCellCreateCapacity)
                            .addComponent(jComboBoxCreateCellFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelCellCreateFloor))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelPrisonersLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jButtonDeleteCell)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonUpdateCell)
                                .addComponent(jButtonRefreshAll))
                            .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelCellUpdateFloor)
                                .addComponent(jComboBoxUpdateCellFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelCellUpdateCapacity)
                                .addComponent(jSpinnerUpdateCellCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSpinnerPrisonerUpdateYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelPrisonersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerPrisonerUpdateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelPrisonerUpdateYear)
                        .addComponent(jLabelPrisonerUpdateMonth)
                        .addComponent(jSpinnerPrisonerUpdateDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelPrisonerUpdateDay)
                        .addComponent(jLabelPrisonerUpdateBorn)))
                .addGap(15, 15, 15))
        );

        jTabbedPanePrison.addTab(resourceBundle.getString("tabb_prisoner"), jPanelPrisoners);

        jTableSentences.setModel(new SentencesTableModel());
        jTableSentences.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(jTableSentences);
        jTableSentences.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabelSentences.setText(resourceBundle.getString("label_sentences"));

        jButtonSentenceDelete.setText(resourceBundle.getString("button_sentence_delete"));
        jButtonSentenceDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSentenceDeleteActionPerformed(evt);
            }
        });

        jButtonSentenceUpdate.setText(resourceBundle.getString("button_sentence_update"));
        jButtonSentenceUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSentenceUpdateActionPerformed(evt);
            }
        });

        jLabel16.setText(resourceBundle.getString("label_start"));

        jLabel17.setText(resourceBundle.getString("label_end"));

        jLabel18.setText(resourceBundle.getString("label_day"));

        jSpinnerUpdateSentenceStartDay.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        jLabel19.setText(resourceBundle.getString("label_month"));

        jSpinnerUpdateSentenceStartMonth.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jLabel20.setText(resourceBundle.getString("label_year"));

        jSpinnerUpdateSentenceStartYear.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3000, 1));

        jLabel21.setText(resourceBundle.getString("label_day"));

        jSpinnerUpdateSentenceEndDay.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        jLabel22.setText(resourceBundle.getString("label_month"));

        jSpinnerUpdateSentenceEndMonth.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jLabel23.setText(resourceBundle.getString("label_year"));

        jSpinnerUpdateSentenceEndYear.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3000, 1));

        jTextFieldSentenceUpdate.setText(resourceBundle.getString("text_sentence_punishment"));

        javax.swing.GroupLayout jPanelSentencesLayout = new javax.swing.GroupLayout(jPanelSentences);
        jPanelSentences.setLayout(jPanelSentencesLayout);
        jPanelSentencesLayout.setHorizontalGroup(
            jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSentencesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSentencesLayout.createSequentialGroup()
                        .addComponent(jLabelSentences, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSentencesLayout.createSequentialGroup()
                        .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelSentencesLayout.createSequentialGroup()
                                .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17))
                                .addGap(37, 37, 37)
                                .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelSentencesLayout.createSequentialGroup()
                                        .addComponent(jSpinnerUpdateSentenceEndDay, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanelSentencesLayout.createSequentialGroup()
                                        .addComponent(jSpinnerUpdateSentenceStartDay, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanelSentencesLayout.createSequentialGroup()
                                        .addComponent(jSpinnerUpdateSentenceEndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerUpdateSentenceEndYear, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                    .addGroup(jPanelSentencesLayout.createSequentialGroup()
                                        .addComponent(jSpinnerUpdateSentenceStartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinnerUpdateSentenceStartYear, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldSentenceUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonSentenceUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(jButtonSentenceDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34))))
        );
        jPanelSentencesLayout.setVerticalGroup(
            jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSentencesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelSentences, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSentencesLayout.createSequentialGroup()
                        .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelSentencesLayout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jButtonSentenceDelete))
                            .addGroup(jPanelSentencesLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelSentencesLayout.createSequentialGroup()
                                .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(jSpinnerUpdateSentenceStartDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel16))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel22)
                                    .addComponent(jSpinnerUpdateSentenceEndDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21)))
                            .addGroup(jPanelSentencesLayout.createSequentialGroup()
                                .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20)
                                    .addComponent(jSpinnerUpdateSentenceStartYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinnerUpdateSentenceStartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelSentencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel23)
                                    .addComponent(jSpinnerUpdateSentenceEndYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinnerUpdateSentenceEndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTextFieldSentenceUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelSentencesLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jButtonSentenceUpdate)))
                .addContainerGap(455, Short.MAX_VALUE))
        );

        jTabbedPanePrison.addTab(resourceBundle.getString("tabb_sentence"), jPanelSentences);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPanePrison)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanePrison)
        );

        jTabbedPanePrison.getAccessibleContext().setAccessibleName("Prison");
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCreatePrisonerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreatePrisonerActionPerformed
        CreatePrisonerSwingWorker cpsw = new CreatePrisonerSwingWorker();
        cpsw.execute();
    }//GEN-LAST:event_jButtonCreatePrisonerActionPerformed
    
    private class CreatePrisonerSwingWorker extends SwingWorker<Prisoner,Void> {
        private PrisonersTableModel model = (PrisonersTableModel) jTablePrisoners.getModel();
        @Override
        protected Prisoner doInBackground() throws Exception {
            String name = jTextFieldPrisonerCreateName.getText();
            String surname = jTextFieldPrisonerCreateSurname.getText();
            int day = (Integer) jSpinnerPrisonerCreateDay.getValue();
            int month = (Integer) jSpinnerPrisonerCreateMonth.getValue();
            int year = (Integer) jSpinnerPrisonerCreateYear.getValue();
            LocalDate born = LocalDate.of(year, month, day);
            Prisoner prisoner = new Prisoner(name, surname, born);
            pM.createPrisoner(prisoner);
            return prisoner;
        }
        
        @Override
        protected void done() {
            try {
                model.addPrisoner(get());
            } catch (InterruptedException ex) {
                logger.log(Level.SEVERE, "creating cell interupted (this should never happen");
            } catch (ExecutionException ex) {
                logger.log(Level.SEVERE, "creating cell failed something is wrong");
            }
        }
        
    }
    
    
    private void jButtonCreateCellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateCellActionPerformed
        CreateCellSwingWorker ccsw = new CreateCellSwingWorker();
        ccsw.execute();
    }//GEN-LAST:event_jButtonCreateCellActionPerformed
    
    private class CreateCellSwingWorker extends SwingWorker<Cell,Void> {
        private CellsTableModel model = (CellsTableModel) jTableCells.getModel();
        @Override
        protected Cell doInBackground() throws Exception {
            
            int floor = jComboBoxCreateCellFloor.getSelectedIndex() + 1;
            int capacity = (Integer) jSpinnerCreateCellCapacity.getValue();
            Cell cell = new Cell(floor,capacity);
            cM.createCell(cell);
            
            return cell;
        }
        
        @Override
        protected void done() {
            try {
                model.addCell(get());
            } catch (InterruptedException ex) {
                logger.log(Level.SEVERE, "creating cell interupted (this should never happen");
            } catch (ExecutionException ex) {
                logger.log(Level.SEVERE, "creating cell failed something is wrong");
            }
        }
        
    }
    
    private void jButtonDeleteCellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteCellActionPerformed
        DeleteCellSwingWorker dcsw = new DeleteCellSwingWorker();
        dcsw.execute();
    }//GEN-LAST:event_jButtonDeleteCellActionPerformed

    private class DeleteCellSwingWorker extends SwingWorker<Integer,Void> {
        private CellsTableModel model = (CellsTableModel) jTableCells.getModel();
        @Override
        protected Integer doInBackground() throws Exception {
            int rowIndex = jTableCells.getSelectedRow();
            Long id = (Long) model.getValueAt(rowIndex, 0);
            cM.deleteCell(cM.getCellById(id));
            
            return rowIndex;
        }
        
        @Override
        protected void done() {
            try {
                model.deleteCell(get());
            } catch (InterruptedException ex) {
                logger.log(Level.SEVERE, "deleting cell interupted (this should never happen)");
            } catch (ExecutionException ex) {
                logger.log(Level.SEVERE, "deleting cell failed, something is wrong..");
            }
        }
        
    }
    
    
    private void jButtonUpdateCellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateCellActionPerformed
        CellsTableModel model = (CellsTableModel) jTableCells.getModel();
        int rowIndex = jTableCells.getSelectedRow();
        Long id = (Long) model.getValueAt(rowIndex, 0);
        int floor = jComboBoxUpdateCellFloor.getSelectedIndex() + 1;
        int capacity = (Integer) jSpinnerUpdateCellCapacity.getValue();
        Cell cell = new Cell(floor, capacity);
        cell.setId(id);
        cM.updateCell(cell);
        model.updateCell(cell, rowIndex);
        
    }//GEN-LAST:event_jButtonUpdateCellActionPerformed

    private class UpdateCellSwingWorker extends SwingWorker<Cell,Void> {
        private CellsTableModel model = (CellsTableModel) jTableCells.getModel();
        @Override
        protected Cell doInBackground() throws Exception {
            int rowIndex = jTableCells.getSelectedRow();
            Long id = (Long) model.getValueAt(rowIndex, 0);
            int floor = jComboBoxUpdateCellFloor.getSelectedIndex() + 1;
            int capacity = (Integer) jSpinnerUpdateCellCapacity.getValue();
            Cell cell = new Cell(floor, capacity);
            cell.setId(id);
            cM.updateCell(cell);
            return cell;
        }
        
        @Override
        protected void done() {
            try {
                model.updateCell(get(), jTableCells.getSelectedRow());
            } catch (InterruptedException ex) {
                logger.log(Level.SEVERE, "creating prisoner interupted (this should never happen");
            } catch (ExecutionException ex) {
                logger.log(Level.SEVERE, "creating prisoner failed something is wrong");
            }
        }
        
    }
    
    
    
    private void jButtonCreateSentenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateSentenceActionPerformed
        CreateSentenceSwingWorker cssw = new CreateSentenceSwingWorker();
        cssw.execute();
    }//GEN-LAST:event_jButtonCreateSentenceActionPerformed

    private class CreateSentenceSwingWorker extends SwingWorker<Sentence,Void> {
        private SentencesTableModel sentenceModel = (SentencesTableModel) jTableSentences.getModel();
        private PrisonersTableModel prisonersModel = (PrisonersTableModel) jTablePrisoners.getModel();
        private CellsTableModel cellsModel = (CellsTableModel) jTableCells.getModel();
        @Override
        protected Sentence doInBackground() throws Exception {
            Long prisonerId = (Long) prisonersModel.getValueAt(jTablePrisoners.getSelectedRow(), 0);
            Long cellId = (Long) cellsModel.getValueAt(jTableCells.getSelectedRow(), 0);
            LocalDate from = LocalDate.of((Integer) jSpinnerSentenceStardYear.getValue()
                    ,(Integer) jSpinnerSentenceStardMonth.getValue()
                    , (Integer) jSpinnerSentenceStardDay.getValue());
            LocalDate to = LocalDate.of((Integer) jSpinnerSentenceEndYear.getValue()
                    , (Integer) jSpinnerSentenceEndMonth.getValue()
                    , (Integer) jSpinnerSentenceEndDay.getValue());
            String punishment = jTextFieldSentenceCreatePunishment.getText();
            
            
            Sentence sentence = new Sentence(prisonerId, cellId, from, to, punishment);
            
            sM.createSentence(sentence);
            return sentence;
            
        }
        
        @Override
        protected void done() {
            try {
                sentenceModel.addSentence(get());
            } catch (InterruptedException ex) {
                logger.log(Level.SEVERE, "create sentence interupted (this should never happen");
            } catch (ExecutionException ex) {
                logger.log(Level.SEVERE, "create sentecne failed thing is wrong");
            }
        }
        
    }
    
    
    private void jButtonUpdatePrisonerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdatePrisonerActionPerformed
        UpdatePrisonerSwingWorker upsw = new UpdatePrisonerSwingWorker();
        upsw.execute();
    }//GEN-LAST:event_jButtonUpdatePrisonerActionPerformed
    
    private class UpdatePrisonerSwingWorker extends SwingWorker<Prisoner,Void> {
        private PrisonersTableModel model = (PrisonersTableModel) jTablePrisoners.getModel();
        @Override
        protected Prisoner doInBackground() throws Exception {
            String name = jTextFieldPrisonerUpdateName.getText();
            String surname = jTextFieldPrisonerUpdateSurname.getText();
            int day = (Integer) jSpinnerPrisonerUpdateDay.getValue();
            int month = (Integer) jSpinnerPrisonerUpdateMonth.getValue();
            int year = (Integer) jSpinnerPrisonerUpdateYear.getValue();
            LocalDate born = LocalDate.of(year, month, day);
            Prisoner prisoner = new Prisoner(name, surname, born);
            prisoner.setId((Long) model.getValueAt(jTablePrisoners.getSelectedRow(), 0));
            pM.updatePrisoner(prisoner);
            return prisoner;
        }
        
        @Override
        protected void done() {
            try {
                model.updatePrisoner(get(), jTablePrisoners.getSelectedRow());
            } catch (InterruptedException ex) {
                logger.log(Level.SEVERE, "updating prisoner interupted (this should never happen");
            } catch (ExecutionException ex) {
                logger.log(Level.SEVERE, "updating prisoner failed thing is wrong");
            }
        }
        
    }
    
    
    private void jButtonDeletePrisonerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletePrisonerActionPerformed
        DeletePrisonerSwingWorker dpsw = new DeletePrisonerSwingWorker();
        dpsw.execute();
    }//GEN-LAST:event_jButtonDeletePrisonerActionPerformed

    private class DeletePrisonerSwingWorker extends SwingWorker<Integer,Void> {
        private PrisonersTableModel model = (PrisonersTableModel) jTablePrisoners.getModel();
        @Override
        protected Integer doInBackground() throws Exception {
            int index = jTablePrisoners.getSelectedRow();
            Long id = (Long) model.getValueAt(index, 0);
            pM.deletePrisoner(pM.getPrisonerById(id));
            return index;
        }
        
        @Override
        protected void done() {
            try {
                model.deleterisoner(get());
            } catch (InterruptedException ex) {
                logger.log(Level.SEVERE, "deleting prisoner interupted (this should never happen");
            } catch (ExecutionException ex) {
                logger.log(Level.SEVERE, "deleting prisoner failed something is wrong");
            }
        }
        
    }
    
    
    private void jComboBoxCreateCellFloorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCreateCellFloorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCreateCellFloorActionPerformed

    private void jButtonRefreshAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshAllActionPerformed
        PrisonersTableModel model_prisoners = (PrisonersTableModel) jTablePrisoners.getModel();
        CellsTableModel model_cells = (CellsTableModel) jTableCells.getModel();
        SentencesTableModel model_sentences = (SentencesTableModel) jTableSentences.getModel();
        model_cells.refresh();
        model_prisoners.refresh();
        model_sentences.refresh();
        addAllCells(model_cells);
        addAllSentences(model_sentences);
        addAllPrisoners(model_prisoners);
    }//GEN-LAST:event_jButtonRefreshAllActionPerformed

    private void jComboBoxUpdateCellFloorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxUpdateCellFloorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxUpdateCellFloorActionPerformed

    private void jTextFieldSentenceCreatePunishmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSentenceCreatePunishmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSentenceCreatePunishmentActionPerformed

    private void jButtonSentenceDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSentenceDeleteActionPerformed
        DeleteSentenceSwingWorker dssw = new DeleteSentenceSwingWorker();
        dssw.execute();
    }//GEN-LAST:event_jButtonSentenceDeleteActionPerformed

    private void jButtonSentenceUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSentenceUpdateActionPerformed
        UpdateSentenceSwingWorker ussw = new UpdateSentenceSwingWorker();
        ussw.execute();
    }//GEN-LAST:event_jButtonSentenceUpdateActionPerformed
    
    private class UpdateSentenceSwingWorker extends SwingWorker<Sentence,Void> {
        private SentencesTableModel model = (SentencesTableModel) jTableSentences.getModel();
        
        @Override
        protected Sentence doInBackground() throws Exception {
            int index = jTableSentences.getSelectedRow();
            Long prisonerId = (Long) model.getValueAt(index, 0);
            Long cellId = (Long) model.getValueAt(index, 1);
            LocalDate from = (LocalDate) model.getValueAt(index , 2);
            LocalDate to = (LocalDate) model.getValueAt(index, 3);
            String punishment = (String) model.getValueAt(index, 4);
            
            Sentence oldS = new Sentence(prisonerId, cellId, from, to, punishment);
            
            LocalDate newFrom = LocalDate.of((Integer) jSpinnerUpdateSentenceStartYear.getValue()
                    , (Integer) jSpinnerUpdateSentenceStartMonth.getValue()
                    , (Integer) jSpinnerUpdateSentenceStartDay.getValue());
            
            LocalDate newTo = LocalDate.of((Integer) jSpinnerUpdateSentenceEndYear.getValue()
                    , (Integer) jSpinnerUpdateSentenceEndMonth.getValue()
                    , (Integer) jSpinnerUpdateSentenceEndDay.getValue());
            
            String newPunishment = jTextFieldSentenceUpdate.getText();
            
            Sentence newS = new Sentence(prisonerId, cellId, newFrom, newTo, newPunishment);
            
            
            sM.updateSentence(oldS, newS);
            return newS;
            
        }
        
        @Override
        protected void done() {
            try {
                model.updateSentence(get(), jTableSentences.getSelectedRow());
            } catch (InterruptedException ex) {
                logger.log(Level.SEVERE, "update sentence interupted (this should never happen");
            } catch (ExecutionException ex) {
                logger.log(Level.SEVERE, "update sentecne failed thing is wrong");
            }
        }
        
    }
    
    
    
    
    
    private class DeleteSentenceSwingWorker extends SwingWorker<Integer,Void> {
        private SentencesTableModel sentenceModel = (SentencesTableModel) jTableSentences.getModel();
        
        @Override
        protected Integer doInBackground() throws Exception {
            int index = jTableSentences.getSelectedRow();
            Long prisonerId = (Long) sentenceModel.getValueAt(index, 0);
            Long cellId = (Long) sentenceModel.getValueAt(index, 1);
            LocalDate from = (LocalDate) sentenceModel.getValueAt(index, 2);
            LocalDate to = (LocalDate) sentenceModel.getValueAt(index, 3);
            String punishment = (String) sentenceModel.getValueAt(index, 4);
            
            Sentence sentence = new Sentence(prisonerId, cellId, from, to ,punishment);
            
            sM.deleteSentence(sentence);
            
            
            return index;
            
        }
        
        @Override
        protected void done() {
            try {
                sentenceModel.deleteSentence(get());
            } catch (InterruptedException ex) {
                logger.log(Level.SEVERE, "delete sentence interupted (this should never happen");
            } catch (ExecutionException ex) {
                logger.log(Level.SEVERE, "delete sentence failed thing is wrong");
            }
        }
        
    }
    
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PrisonFrame frame = new PrisonFrame();
                frame.setPreferredSize(new Dimension(900, 750));
                frame.getContentPane().add(new PrisonTabbedPane(), BorderLayout.CENTER);
                frame.setDefaultCloseOperation(PrisonFrame.EXIT_ON_CLOSE);
                frame.setTitle(resourceBundle.getString("main_title"));
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreateCell;
    private javax.swing.JButton jButtonCreatePrisoner;
    private javax.swing.JButton jButtonCreateSentence;
    private javax.swing.JButton jButtonDeleteCell;
    private javax.swing.JButton jButtonDeletePrisoner;
    private javax.swing.JButton jButtonRefreshAll;
    private javax.swing.JButton jButtonSentenceDelete;
    private javax.swing.JButton jButtonSentenceUpdate;
    private javax.swing.JButton jButtonUpdateCell;
    private javax.swing.JButton jButtonUpdatePrisoner;
    private javax.swing.JComboBox<String> jComboBoxCreateCellFloor;
    private javax.swing.JComboBox<String> jComboBoxUpdateCellFloor;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabelCellCreateCapacity;
    private javax.swing.JLabel jLabelCellCreateFloor;
    private javax.swing.JLabel jLabelCellUpdateCapacity;
    private javax.swing.JLabel jLabelCellUpdateFloor;
    private javax.swing.JLabel jLabelCells;
    private javax.swing.JLabel jLabelPrisonerCreateBorn;
    private javax.swing.JLabel jLabelPrisonerCreateDay;
    private javax.swing.JLabel jLabelPrisonerCreateMonth;
    private javax.swing.JLabel jLabelPrisonerCreateYear;
    private javax.swing.JLabel jLabelPrisonerUpdateBorn;
    private javax.swing.JLabel jLabelPrisonerUpdateDay;
    private javax.swing.JLabel jLabelPrisonerUpdateMonth;
    private javax.swing.JLabel jLabelPrisonerUpdateYear;
    private javax.swing.JLabel jLabelPrisoners;
    private javax.swing.JLabel jLabelSentence;
    private javax.swing.JLabel jLabelSentenceCreateEnd;
    private javax.swing.JLabel jLabelSentenceCreateEndDay;
    private javax.swing.JLabel jLabelSentenceCreateEndMonth;
    private javax.swing.JLabel jLabelSentenceCreateEndYear;
    private javax.swing.JLabel jLabelSentenceCreateStart;
    private javax.swing.JLabel jLabelSentenceCreateStartDay;
    private javax.swing.JLabel jLabelSentenceCreateStartMonth;
    private javax.swing.JLabel jLabelSentenceCreateStartYear;
    private javax.swing.JLabel jLabelSentences;
    private javax.swing.JPanel jPanelPrisoners;
    private javax.swing.JPanel jPanelSentences;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinnerCreateCellCapacity;
    private javax.swing.JSpinner jSpinnerPrisonerCreateDay;
    private javax.swing.JSpinner jSpinnerPrisonerCreateMonth;
    private javax.swing.JSpinner jSpinnerPrisonerCreateYear;
    private javax.swing.JSpinner jSpinnerPrisonerUpdateDay;
    private javax.swing.JSpinner jSpinnerPrisonerUpdateMonth;
    private javax.swing.JSpinner jSpinnerPrisonerUpdateYear;
    private javax.swing.JSpinner jSpinnerSentenceEndDay;
    private javax.swing.JSpinner jSpinnerSentenceEndMonth;
    private javax.swing.JSpinner jSpinnerSentenceEndYear;
    private javax.swing.JSpinner jSpinnerSentenceStardDay;
    private javax.swing.JSpinner jSpinnerSentenceStardMonth;
    private javax.swing.JSpinner jSpinnerSentenceStardYear;
    private javax.swing.JSpinner jSpinnerUpdateCellCapacity;
    private javax.swing.JSpinner jSpinnerUpdateSentenceEndDay;
    private javax.swing.JSpinner jSpinnerUpdateSentenceEndMonth;
    private javax.swing.JSpinner jSpinnerUpdateSentenceEndYear;
    private javax.swing.JSpinner jSpinnerUpdateSentenceStartDay;
    private javax.swing.JSpinner jSpinnerUpdateSentenceStartMonth;
    private javax.swing.JSpinner jSpinnerUpdateSentenceStartYear;
    private javax.swing.JTabbedPane jTabbedPanePrison;
    private javax.swing.JTable jTableCells;
    private javax.swing.JTable jTablePrisoners;
    private javax.swing.JTable jTableSentences;
    private javax.swing.JTextField jTextFieldPrisonerCreateName;
    private javax.swing.JTextField jTextFieldPrisonerCreateSurname;
    private javax.swing.JTextField jTextFieldPrisonerUpdateName;
    private javax.swing.JTextField jTextFieldPrisonerUpdateSurname;
    private javax.swing.JTextField jTextFieldSentenceCreatePunishment;
    private javax.swing.JTextField jTextFieldSentenceUpdate;
    // End of variables declaration//GEN-END:variables
}
